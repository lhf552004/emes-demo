{"version":3,"sources":["webpack:///src/app/lines/jobs/job-default/job-default.component.ts","webpack:///src/app/lines/jobs/job-default/job-default.component.html","webpack:///src/app/lines/jobs/job/job.component.ts","webpack:///src/app/lines/jobs/job/job.component.html","webpack:///src/app/lines/jobs/jobs-routing.module.ts","webpack:///src/app/lines/jobs/jobs.module.ts","webpack:///src/app/lines/jobs/jobs/jobs.component.ts","webpack:///src/app/lines/jobs/jobs/jobs.component.html","webpack:///src/app/lines/jobs/route-resolvers/job-resolver.service.ts","webpack:///src/app/lines/jobs/route-resolvers/jobs-resolver.service.ts","webpack:///src/app/lines/jobs/shared/job.service.ts"],"names":["JobDefaultComponent","selector","templateUrl","styleUrls","JobComponent","route","faEllipsisV","job","types","isAuthor","isOwner","unsubscribe","data","pipe","subscribe","console","log","next","complete","close","$event","nameChanged","routes","path","component","resolve","jobs","JobsRoutingModule","forChild","imports","exports","JobsModule","declarations","JobsComponent","JobResolverService","jobService","router","state","id","paramMap","get","getJob","providedIn","JobsResolverService","lineId","parent","getJobs","JobService","name","lineName","actualWeight","targetWeight","find","j","filter"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaA,mB;AAEX,qCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,mB;AAAmB,K;;;YAAnBA,mB;AAAmB,uC;AAAA,c;AAAA,a;AAAA;AAAA;ACPhC;;AAAG;;AAAkB;;;;;;;;sEDORA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTC,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;AEPhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACUgB;;AAAyF;AAAA;;AAAA;;AAAA;AAAA;;AAAkB;;AAAK;;;;;;;;AAChH;;AAAyF;AAAA;;AAAA;;AAAA;AAAA;;AAAkB;;AAAK;;;;;;;;AAChH;;AAAyF;AAAA;;AAAA;;AAAA;AAAA;;AAAiB;;AAAI;;;;;;;;AAC9G;;AACI;;AAAqD;AAAA;;AAAA;;AAAA,8BAAc,KAAd;AAAmB,SAAnB;;AAAsB;;AAAI;;AAC/E;;AACI;;AACA;;AACI;;AAAwB;AAAA;;AAAA;;AAAA,8BAAc,KAAd;AAAmB,SAAnB;;AAAsB;;AAAI;;AAClD;;AAAwB;AAAA;;AAAA;;AAAA,8BAAc,IAAd;AAAkB,SAAlB;;AAAqB;;AAAY;;AAC7D;;AACJ;;AACJ;;;;;;;;AASQ;;AAAyC;AAAA;;AAAA;;AAAA,8BAAc,IAAd;AAAkB,SAAlB;;AAAqB;;AAAI;;;;;;;;AAClE;;AAAyC;AAAA;;AAAA;;AAAA;AAAA;;AAAkB;;AAAY;;;;;;;;AACvE;;AAAwC;AAAA;;AAAA;;AAAA;AAAA;;AAAiB;;AAAI;;;;;;;;AAC7D;;AAAwC;AAAA;;AAAA;;AAAA;AAAA;;AAAmB;;AAAM;;;;QDvB5EC,Y;AAsBX,4BAAoBC,KAApB,EAA2C;AAAA;;AAAvB,aAAAA,KAAA,GAAAA,KAAA,CAAuB,CApB3C;;AACA,aAAAC,WAAA,GAA8B,6EAA9B,CAmB2C,CAjB3C;;AACA,aAAAC,GAAA,GAAW,EAAX,CAgB2C,CAd3C;;AACA,aAAAC,KAAA,GAAe,CAAC,KAAD,EAAQ,kBAAR,EAA4B,cAA5B,CAAf,CAa2C,CAR3C;;AACA,aAAAC,QAAA,GAAoB,IAApB,CAO2C,CAN3C;;AACA,aAAAC,OAAA,GAAmB,IAAnB,CAK2C,CAH3C;;AACA,aAAAC,WAAA,GAA6B,IAAI,4CAAJ,EAA7B;AAE8C;;;;mCAEtC;AAAA;;AACN,eAAKN,KAAL,CAAWO,IAAX,CAAgBC,IAAhB,CAAqB,iEAAU,KAAKF,WAAf,CAArB,EAAkDG,SAAlD,CAA4D,UAAAF,IAAI,EAAI;AAClE,gBAAIA,IAAI,CAACL,GAAT,EACE,KAAI,CAACA,GAAL,GAAWK,IAAI,CAACL,GAAhB;AACFQ,mBAAO,CAACC,GAAR,CAAY,KAAI,CAACT,GAAjB;AACD,WAJD;AAKD;;;sCAEa;AACZ,eAAKI,WAAL,CAAiBM,IAAjB;AACA,eAAKN,WAAL,CAAiBO,QAAjB;AACD;;;6BAEIC,K,EAAgB,CAEpB;;;gCAEO,CAEP;;;+BAEM,CAEN;;;kCAEQ,CAER;;;uCAEc,CAEd;;;oCAEWC,M,EAAQ,CAEnB;;;gCAEO,CAEP;;;gCAEO,CAEP;;;+BAEM,CAEN;;;;;;;uBAvEUhB,Y,EAAY,+H;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,c;AAAA,4tD;AAAA;AAAA;ACXzB;;AACI;;AACI;;AACI;;AACI;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACA;;AACA;;AACA;;AAWA;;AAA4D;AAAA,mBAAS,IAAAe,KAAA,EAAT;AAAgB,WAAhB;;AAAkB;;AAAK;;AAEnF;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACA;;AACA;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AACE;;AACE;;AAAqB;;AAAE;;AACvB;;AAAoE;AAAA;AAAA;;AAApE;;AACF;;AACA;;AACE;;AAAuB;;AAAI;;AAC3B;;AAAwE;AAAA;AAAA,aAAsB,OAAtB,EAAsB;AAAA,mBAAU,IAAAE,WAAA,qBAAV;AAA0C,WAAhE;;AAAxE;;AACF;;AACF;;AACA;;AACI;;AACI;;AAAuB;;AAAI;;AAC3B;;AAAwE;AAAA;AAAA;;AAAxE;;AACJ;;AACA;;AACE;;AAA+B;;AAAa;;AAC5C;;AAAwF;AAAA;AAAA;;AAAxF;;AACF;;AACF;;AACN;;;;AArDwB;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACH;;AAAA;;AAeyC;;AAAA,4FAAoB,YAApB,EAAoB,IAApB;;AAG9B;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAY4C;;AAAA;;AAII;;AAAA;;AAMI;;AAAA;;AAIc;;AAAA;;;;;;;;;sEDjDrFjB,Y,EAAY;cALxB,uDAKwB;eALd;AACTH,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;AEXzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQA,QAAMmB,MAAM,GAAW,CACnB;AACIC,UAAI,EAAE,EADV;AACcC,eAAS,EAAE,kEADzB;AACwCC,aAAO,EAAE;AAACC,YAAI,EAAE;AAAP;AADjD,KADmB,EAInB;AAAEH,UAAI,EAAE,QAAR;AAAkBE,aAAO,EAAE;AAAClB,WAAG,EAAE;AAAN,OAA3B;AAAsDiB,eAAS,EAAE;AAAjE,KAJmB,CAAvB;;QAWaG,iB;;;;;YAAAA;;;;yBAAAA,iB;AAAiB,O;AAAA,gBAHnB,CAAC,6DAAaC,QAAb,CAAsBN,MAAtB,CAAD,CAGmB,EAFlB,4DAEkB;;;;0HAAjBK,iB,EAAiB;AAAA;AAAA,kBAFlB,4DAEkB;AAAA,O;AAFN,K;;;;;sEAEXA,iB,EAAiB;cAJ7B,sDAI6B;eAJpB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBN,MAAtB,CAAD,CADD;AAERQ,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAIoB,Q;;;;;;;;;;;;;;;;;;ACnB9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAgBaC,U;;;;;YAAAA;;;;yBAAAA,U;AAAU,O;AAAA,gBANZ,CACP,sEADO,EAEP,yEAFO,EAGP,4EAHO,CAMY;;;;0HAAVA,U,EAAU;AAAA,uBAPN,kEAOM,EAPS,+DAOT,EAPuB,sFAOvB;AAP0C,kBAE7D,sEAF6D,EAG7D,yEAH6D,EAI7D,4EAJ6D;AAO1C,O;AAHF,K;;;;;sEAGRA,U,EAAU;cARtB,sDAQsB;eARb;AACRC,sBAAY,EAAE,CAAC,kEAAD,EAAgB,+DAAhB,EAA8B,sFAA9B,CADN;AAERH,iBAAO,EAAE,CACP,sEADO,EAEP,yEAFO,EAGP,4EAHO;AAFD,S;AAQa,Q;;;;;;;;;;;;;;;;;;AChBvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACWM;;AACE;;AAAgB;;AAAK;;AACrB;;AAAI;;AAA2B;;AAAU;;AAAI;;AAC7C;;AAAI;;AAAY;;AAChB;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAoB;;AAC1B;;;;;;;AALkB;;AAAA;;AACT;;AAAA;;AAAwB;;AAAA;;AAC3B;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;QDFCI,a;AAOX,6BAAoB5B,KAApB,EAA2C;AAAA;;AAAvB,aAAAA,KAAA,GAAAA,KAAA,CAAuB,CAH3C;;AACA,aAAAM,WAAA,GAA6B,IAAI,4CAAJ,EAA7B;AAE8C;;;;mCAEtC;AAAA;;AACN,eAAKN,KAAL,CAAWO,IAAX,CAAgBC,IAAhB,CAAqB,iEAAU,KAAKF,WAAf,CAArB,EAAkDG,SAAlD,CAA4D,UAACF,IAAD,EAAwB;AAClF,kBAAI,CAACc,IAAL,GAAYd,IAAI,CAACc,IAAjB;AACAX,mBAAO,CAACC,GAAR,CAAY,MAAI,CAACU,IAAjB;AACD,WAHD;AAID;;;sCAEa;AACZ,eAAKf,WAAL,CAAiBM,IAAjB;AACA,eAAKN,WAAL,CAAiBO,QAAjB;AACD;;;;;;;uBAnBUe,a,EAAa,+H;AAAA,K;;;YAAbA,a;AAAa,gC;AAAA,e;AAAA,a;AAAA,4G;AAAA;AAAA;ACd1B;;AACI;;AACE;;AACE;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAE;;AAClB;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAM;;AACxB;;AACF;;AACA;;AACE;;AAOF;;AACF;;;;AARQ;;AAAA;;;;;;;;;sEDGGA,a,EAAa;cALzB,uDAKyB;eALf;AACThC,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;AEd1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa+B,kB;AAEX,kCAAoBC,UAApB,EAAoDC,MAApD,EAAoE;AAAA;;AAAhD,aAAAD,UAAA,GAAAA,UAAA;AAAgC,aAAAC,MAAA,GAAAA,MAAA;AAAmB;;;;gCAC/D/B,K,EAA+BgC,K,EAA0B;AAC/D,cAAMC,EAAE,GAAGjC,KAAK,CAACkC,QAAN,CAAeC,GAAf,CAAmB,OAAnB,CAAX;AACA,iBAAO,KAAKL,UAAL,CAAgBM,MAAhB,CAAuBH,EAAvB,CAAP;AACD;;;;;;;uBANUJ,kB,EAAkB,sH,EAAA,8G;AAAA,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB,K;AAAA,kBAFjB;;;;;sEAEDA,kB,EAAkB;cAH9B,wDAG8B;eAHnB;AACVQ,oBAAU,EAAE;AADF,S;AAGmB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACT/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaC,mB;AAEX,mCAAoBR,UAApB,EAAoDC,MAApD,EAAoE;AAAA;;AAAhD,aAAAD,UAAA,GAAAA,UAAA;AAAgC,aAAAC,MAAA,GAAAA,MAAA;AAAmB;;;;gCAC/D/B,K,EAA+BgC,K,EAA0B;AAC/D,cAAMO,MAAM,GAAGvC,KAAK,CAACwC,MAAN,CAAaA,MAAb,CAAoBN,QAApB,CAA6BC,GAA7B,CAAiC,QAAjC,CAAf;AACA,iBAAO,KAAKL,UAAL,CAAgBW,OAAhB,CAAwBF,MAAxB,CAAP;AACD;;;;;;;uBANUD,mB,EAAmB,sH,EAAA,8G;AAAA,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB,K;AAAA,kBAFlB;;;;;sEAEDA,mB,EAAmB;cAH/B,wDAG+B;eAHpB;AACVD,oBAAU,EAAE;AADF,S;AAGoB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACThC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaK,U;AAgCX,4BAAc;AAAA;;AA9Bd,aAAArB,IAAA,GAAc,CACZ;AACEY,YAAE,EAAE,sCADN;AAEEU,cAAI,EAAE,aAFR;AAGEJ,gBAAM,EAAE,sCAHV;AAIEK,kBAAQ,EAAE,MAJZ;AAKEC,sBAAY,EAAE,IALhB;AAMEC,sBAAY,EAAE,IANhB;AAOEd,eAAK,EAAE;AAPT,SADY,EAUZ;AACEC,YAAE,EAAE,sCADN;AAEEU,cAAI,EAAE,aAFR;AAGEJ,gBAAM,EAAE,sCAHV;AAIEK,kBAAQ,EAAE,MAJZ;AAKEC,sBAAY,EAAE,IALhB;AAMEC,sBAAY,EAAE,IANhB;AAOEd,eAAK,EAAE;AAPT,SAVY,EAmBZ;AACEC,YAAE,EAAE,sCADN;AAEEU,cAAI,EAAE,aAFR;AAGEJ,gBAAM,EAAE,sCAHV;AAIEK,kBAAQ,EAAE,MAJZ;AAKEC,sBAAY,EAAE,IALhB;AAMEC,sBAAY,EAAE,IANhB;AAOEd,eAAK,EAAE;AAPT,SAnBY,CAAd;AA8BiB;;;;+BAEVC,E,EAAU;AACf,iBAAO,gDAAG,KAAKZ,IAAL,CAAU0B,IAAV,CAAe,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACf,EAAF,KAASA,EAAb;AAAA,WAAhB,CAAH,CAAP;AACD;;;gCAEOM,M,EAAc;AACpB,iBAAO,gDAAG,KAAKlB,IAAL,CAAU4B,MAAV,CAAiB,UAAAD,CAAC;AAAA,mBAAIA,CAAC,CAACT,MAAF,KAAaA,MAAjB;AAAA,WAAlB,CAAH,CAAP;AACD;;;;;;;uBAxCUG,U;AAAU,K;;;aAAVA,U;AAAU,eAAVA,UAAU,K;AAAA,kBAFT;;;;;sEAEDA,U,EAAU;cAHtB,wDAGsB;eAHX;AACVL,oBAAU,EAAE;AADF,S;AAGW,Q","file":"jobs-jobs-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'emes-job-default',\n  templateUrl: './job-default.component.html',\n  styleUrls: ['./job-default.component.scss']\n})\nexport class JobDefaultComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>job-default works!</p>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { faEllipsisV, IconDefinition } from '@fortawesome/free-solid-svg-icons';\nimport { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'emes-job',\n  templateUrl: './job.component.html',\n  styleUrls: ['./job.component.scss']\n})\nexport class JobComponent implements OnInit, OnDestroy {\n\n  // Icon\n  faEllipsisV: IconDefinition = faEllipsisV;\n\n  // Current job\n  job: any = {};\n\n  // Product type\n  types: any[] = ['Raw', 'Finished Product', 'Semi-Product'];\n\n  // Selected type\n  selectedType: any;\n  \n  // Indicator whether it is a author\n  isAuthor: boolean = true;\n  // Indicator whether it is a owner\n  isOwner: boolean = true;\n  \n  // Used for cleaning subscription \n  unsubscribe: Subject<void> = new Subject();\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.data.pipe(takeUntil(this.unsubscribe)).subscribe(data => {\n      if (data.job)\n        this.job = data.job;\n      console.log(this.job)\n    });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  save(close: boolean) {\n\n  }\n\n  close() {\n\n  }\n\n  copy() {\n\n  }\n\n  delete() {\n\n  }\n\n  typeSelected() {\n\n  }\n\n  nameChanged($event) {\n\n  }\n\n  start() {\n\n  }\n\n  pause() {\n\n  }\n\n  stop() {\n\n  }\n}\n","<div class=\"container-fluid d-flex flex-column\">\n    <div class=\"row justify-content-between align-items-center pt-3 pb-2 mb-3 border-bottom\">\n        <div class=\"col-auto\">\n            <h2>\n                Job Management\n            </h2>\n        </div>\n\n        <div class=\"col-auto\">\n            <div class=\"btn-toolbar mb-2 mb-md-0\">\n                <button *ngIf=\"job.state !== 'started'\" type=\"button\" class=\"btn btn-sm btn-danger mr-2\" (click)=\"start()\">Start</button>\n                <button *ngIf=\"job.state === 'started'\" type=\"button\" class=\"btn btn-sm btn-danger mr-2\" (click)=\"pause()\">Start</button>\n                <button *ngIf=\"job.state === 'started'\" type=\"button\" class=\"btn btn-sm btn-danger mr-2\" (click)=\"stop()\">Stop</button>\n                <div *ngIf=\"isAuthor\" class=\"btn-group mr-2\">\n                    <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"save(false)\">Save</button>\n                    <div class=\"btn-group\" ngbDropdown placement=\"bottom-right\">\n                        <button class=\"btn btn-sm btn-primary dropdown-toggle-split\" ngbDropdownToggle></button>\n                        <div class=\"dropdown-menu\" ngbDropdownMenu>\n                            <button ngbDropdownItem (click)=\"save(false)\">Save</button>\n                            <button ngbDropdownItem (click)=\"save(true)\">Save & Close</button>\n                        </div>\n                    </div>\n                </div>\n\n                <button type=\"button\" class=\"btn btn-sm btn-secondary mr-2\" (click)=\"close()\">Close</button>\n\n                <div class=\"btn-group mr-2\" ngbDropdown placement=\"bottom-right\">\n                    <button type=\"button\" class=\"btn btn-sm btn-link dropdown-icon\" ngbDropdownToggle>\n                        <fa-icon class=\"text-primary pointer\" [icon]=\"faEllipsisV\" [fixedWidth]=\"true\"></fa-icon>\n                    </button>\n                    <div class=\"dropdown-menu\" ngbDropdownMenu>\n                        <button *ngIf=\"isAuthor\" ngbDropdownItem (click)=\"save(true)\">Save</button>\n                        <button *ngIf=\"isAuthor\" ngbDropdownItem (click)=\"close()\">Save & Close</button>\n                        <button *ngIf=\"isOwner\" ngbDropdownItem (click)=\"copy()\">Copy</button>   \n                        <button *ngIf=\"isOwner\" ngbDropdownItem (click)=\"delete()\">Delete</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<form>\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-6\">\n        <label for=\"inputId\">Id</label>\n        <input type=\"text\" class=\"form-control\" id=\"inputId\" name=\"inputId\" [(ngModel)]=\"job.id\" disabled>\n      </div>\n      <div class=\"form-group col-md-6\">\n        <label for=\"inputName\">Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"inputName\" name=\"inputName\" [(ngModel)]=\"job.name\" (input)=\"nameChanged($event.target.value)\" placeholder=\"Enter Name here\">\n      </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col-md-6\">\n            <label for=\"inputLine\">Line</label>\n            <input type=\"text\" class=\"form-control\" id=\"inputLine\" name=\"inputLine\" [(ngModel)]=\"job.lineName\" disabled>\n        </div>\n        <div class=\"form-group col-md-6\">\n          <label for=\"inputTargetWeight\">Target Weight</label>\n          <input type=\"text\" class=\"form-control\" id=\"inputTargetWeight\" name=\"inputTargetWeight\" [(ngModel)]=\"job.targetWeight\">\n        </div>\n      </div>\n</form>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { JobDefaultComponent } from './job-default/job-default.component';\r\nimport { JobComponent } from './job/job.component';\r\nimport { JobsComponent } from './jobs/jobs.component';\r\nimport { JobResolverService } from './route-resolvers/job-resolver.service';\r\nimport { JobsResolverService } from './route-resolvers/jobs-resolver.service';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: JobsComponent, resolve: {jobs: JobsResolverService}\r\n    },\r\n    { path: ':jobId', resolve: {job: JobResolverService}, component: JobComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class JobsRoutingModule { }","import { NgModule } from '@angular/core';\nimport { JobsComponent } from './jobs/jobs.component';\nimport { JobComponent } from './job/job.component';\nimport { JobDefaultComponent } from './job-default/job-default.component';\nimport { JobsRoutingModule } from './jobs-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [JobsComponent, JobComponent, JobDefaultComponent],\n  imports: [\n    JobsRoutingModule,\n    SharedModule,\n    NgbDropdownModule\n  ]\n})\nexport class JobsModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { DataTableColumnDefinition, DataTableSettings } from 'data-table';\nimport { MenuItem } from 'src/app/shared/side-bar/models/menu-items.model';\nimport { Job } from '../shared/models/job.model';\n\n@Component({\n  selector: 'emes-jobs',\n  templateUrl: './jobs.component.html',\n  styleUrls: ['./jobs.component.scss']\n})\nexport class JobsComponent implements OnInit, OnDestroy {\n\n  jobs: Job[];\n  \n  // Used for cleaning subscription \n  unsubscribe: Subject<void> = new Subject();\n  \n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.data.pipe(takeUntil(this.unsubscribe)).subscribe((data: {jobs: Job[]}) =>{\n      this.jobs = data.jobs;\n      console.log(this.jobs)\n    });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n}\n","<table class=\"table\">\n    <thead>\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Id</th>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">Line</th>\n        <th scope=\"col\">Weight</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let job of jobs; let i = index\">\n        <th scope=\"row\">{{i}}</th>\n        <td><a [routerLink]=\"[job.id]\">{{job.id}}</a></td>\n        <td>{{job.name}}</td>\n        <td>{{job.lineName}}</td>\n        <td>{{job.targetWeight}}</td>\n      </tr>\n    </tbody>\n  </table>","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Job } from '../shared/models/job.model';\nimport { JobService } from '../shared/job.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobResolverService {\n\n  constructor(private jobService: JobService, private router: Router) { }\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Job> {\n    const id = route.paramMap.get('jobId');\n    return this.jobService.getJob(id as string);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Job } from '../shared/models/job.model';\nimport { JobService } from '../shared/job.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobsResolverService {\n\n  constructor(private jobService: JobService, private router: Router) { }\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Job[]> {\n    const lineId = route.parent.parent.paramMap.get('lineId');\n    return this.jobService.getJobs(lineId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Job } from './models/job.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobService {\n\n  jobs: Job[] = [\n    {\n      id: '821c6f60-c7b5-4090-ad6a-0cd25cd4cdfb',\n      name: 'INT1:000001',\n      lineId: '252558f9-c2a8-4f7d-b607-ff02dc1e6c4c',\n      lineName: 'INT1',\n      actualWeight: 3000,\n      targetWeight: 3100,\n      state: 'created'\n    },\n    {\n      id: '6e386b40-9684-4ebd-be32-8f4d8ddcb650',\n      name: 'INT2:000001',\n      lineId: '5bcdc28b-fc29-4d4e-a6c3-e15866531989',\n      lineName: 'INT2',\n      actualWeight: 5000,\n      targetWeight: 5100,\n      state: 'created'\n    },\n    {\n      id: 'e7dcecae-b6b7-486f-b9df-e6e638d4e98b',\n      name: 'MIX1:000001',\n      lineId: '844660ac-7ec5-4819-887d-00dae25676e6',\n      lineName: 'MIX1',\n      actualWeight: 3000,\n      targetWeight: 3100,\n      state: 'created'\n    }\n  ];\n\n  constructor() { }\n\n  getJob(id: string): Observable<Job> {\n    return of(this.jobs.find(j => j.id === id));\n  }\n\n  getJobs(lineId: string): Observable<Job[]> {\n    return of(this.jobs.filter(j => j.lineId === lineId));\n  }\n}"]}